/* 
    *   Створити динамічну структуру згідно з варіантом. Програма повинна
    *   містити функції для додавання, видалення, перегляду та очищення структури
    *   даних. Також повинні бути передбачені обробки аварійних ситуацій, напри-
    *   клад, спроба видалення елемента з порожнього стеку.
    * 
    *   Створити стек з цілими числами за допомогою однозв'язного списку.
    *   Реалізувати операції push та pop для додавання та видалення елементів зі стеку
    *   відповідно. Додати числа 4, 3, 1, 2, 4 до стеку та вивести його вміст. Видалити
    *   один елемент зі стеку, вивести вміст стеку знову. Знайти мінімальний елемент,
    *   який належить стеку. 
*/

#include "stack.cpp"

int main() {
    Stack<int> myStack;

    myStack.push(4);
    myStack.push(3);
    myStack.push(1);
    myStack.push(2);
    myStack.push(4);

    std::cout << "Содержимое стека: ";
    myStack.display();

    myStack.pop();

    std::cout << "Содержимое стека после pop: ";
    myStack.display();

    int minElement = myStack.findMin();
    std::cout << "Минимальный элемент в стеке: " << minElement << '\n';

    return 0;
}
